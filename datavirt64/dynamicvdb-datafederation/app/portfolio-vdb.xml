<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<vdb name="Portfolio" version="1">

    <description>The Portfolio Dynamic VDB</description>
    
    <!-- 
      Setting to use connector supplied metadata. Can be "true" or "cached".  
      "true" will obtain metadata once for every launch of Teiid. 
      "cached" will save a file containing the metadata into 
      the deploy/<vdb name>/<vdb version/META-INF directory
    -->
    <property name="UseConnectorMetadata" value="true" />

    <!-- 
      Each model represents a access to one or more sources.
      The name of the model will be used as a top level schema name
      for all of the metadata imported from the connector.
    
      NOTE: Multiple models, with different import settings, can be bound to 
      the same connector binding and will be treated as the same source at
      runtime. 
    --> 
    <model name="MarketData">
        <!-- 
            Each source represents a translator and data source. There are 
            pre-defined translators, or you can create one.
        -->
        <source name="text-connector" translator-name="file" connection-jndi-name="java:/marketdata-file"/>
    </model>

    <model name="Accounts">
        <!-- 
          JDBC Import settings 
          
          importer.useFullSchemaName directs the importer to drop the source 
          schema from the Teiid object name, so that the Teiid fully qualified name
          will be in the form of <model name>.<table name>
        -->
        <property name="importer.useFullSchemaName" value="false"/>
        <!-- Prevents MySQL integer from being interpreted as long. -->
        <property name="importer.widenUnsignedTypes" value="false"/>
           
         <!--
            This connector is defined to reference the H2 localDS" 
          -->
        <source name="connector" translator-name="translator-${env.QS_DB_TYPE:h2}" connection-jndi-name="java:/accounts-ds"/>
    </model>
    
   <model name="PersonalValuations">
        <property name="importer.headerRowNumber" value="1"/>
        <property name="importer.ExcelFileName" value="otherholdings.xls"/>
        <source name="excelconnector" translator-name="excel"  connection-jndi-name="java:/excel-file"/>
        <metadata type="DDL"><![CDATA[

SET NAMESPACE 'http://www.teiid.org/translator/excel/2014' AS teiid_excel;

CREATE FOREIGN TABLE Sheet1 (
	ROW_ID integer OPTIONS (SEARCHABLE 'All_Except_Like', "teiid_excel:CELL_NUMBER" 'ROW_ID'),
	ACCOUNT_ID integer OPTIONS (SEARCHABLE 'Unsearchable', "teiid_excel:CELL_NUMBER" '1'),
	PRODUCT_TYPE string OPTIONS (SEARCHABLE 'Unsearchable', "teiid_excel:CELL_NUMBER" '2'),
	PRODUCT_VALUE string OPTIONS (SEARCHABLE 'Unsearchable', "teiid_excel:CELL_NUMBER" '3'),
	CONSTRAINT PK0 PRIMARY KEY(ROW_ID)
) OPTIONS ("teiid_excel:FILE" 'otherholdings.xls', "teiid_excel:FIRST_DATA_ROW_NUMBER" '2');
    
         ]]> </metadata>
    </model> 
    
    <model name="Stocks" type="VIRTUAL">
        <metadata type="DDL"><![CDATA[
                
        CREATE VIEW StockPrices (
            symbol string,
            price bigdecimal
            )
            AS  
               SELECT SP.symbol, SP.price
                FROM (EXEC MarketData.getTextFiles('*.txt')) AS f, 
                    TEXTTABLE(f.file COLUMNS symbol string, price bigdecimal HEADER) AS SP;
        
        
        CREATE VIEW Stock (
            product_id integer,
            symbol string,
            price bigdecimal,
            company_name   varchar(256)
            )
            AS
                SELECT  A.ID, S.symbol, S.price, A.COMPANY_NAME
                    FROM StockPrices AS S, Accounts.PRODUCT AS A
                    WHERE S.symbol = A.SYMBOL;

                 
        ]]> </metadata>
    </model>
    
    <model name="OtherHoldings" type="VIRTUAL">
    	<metadata type="DDL"><![CDATA[
    	
    	        CREATE VIEW PersonalHoldings (
            ACCOUNT_ID integer,
            SSN string,
            STATUS string,
            TYPE string,
            PRODUCT_TYPE string,
            PRODUCT_VALUE bigdecimal
            )
            AS  
               SELECT b.ACCOUNT_ID, b.ssn, b.Status, b.Type, a.PRODUCT_TYPE, CONVERT(PRODUCT_VALUE, bigdecimal) AS PRODUCT_VALUE
                                        FROM PersonalValuations.SHEET1 as A, Accounts.Account as B
                                        where A.ACCOUNT_ID = b.ACCOUNT_ID
     	]]>
   		</metadata>
	</model>  
	
    <translator name="translator-h2" type="h2">
        <property name="SupportsNativeQueries" value="true"/>
    </translator>
    <translator name="translator-derby" type="derby">
        <property name="SupportsNativeQueries" value="true"/>
    </translator>
    <translator name="translator-mysql5" type="mysql5">
        <property name="SupportsNativeQueries" value="true"/>
    </translator>
    <translator name="translator-postgresql" type="postgresql">
        <property name="SupportsNativeQueries" value="true"/>
    </translator>

</vdb>